{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  dadosTabela = [\n    {name: 'Maria', value: 3},\n    {name: 'José', value: 5},\n  ];\n\n  dadosGrafico = [];\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  addLine(): void {\n    this.dadosTabela.push({name: '', value: null});\n    console.log('tabela');\n    console.log(this.dadosTabela);\n  }\n\n  refresh(): void {\n    this.dadosGrafico = this.dadosTabela\n      .filter(({name, value}) => name && value)\n      .map(({name, value}) => ({name: `${name}: ${value}`, value}));\n    console.log('grafico');\n    console.log(this.dadosGrafico);\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <h1 class=\"col text-center\">Visualizando Dados</h1>\n  </div>\n\n  <div class=\"row\">\n\n<!--    tabela -->\n    <div class=\"col-sm-6\">\n      <h2>Tabela</h2>\n      <table class=\"table table-striped table-bordered\">\n        <thead>\n          <tr>\n            <th scope=\"col\">\n              <input type=\"text\" (change)=\"refresh()\" class=\"form-control-plaintext form-control-sm font-weight-bold\" value=\"Nome\">\n            </th>\n            <th scope=\"col\">\n              <input type=\"text\" (change)=\"refresh()\" class=\"form-control-plaintext form-control-sm font-weight-bold\" value=\"Quantidade\">\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let d of dadosTabela\">\n            <td>\n              <input type=\"text\" (change)=\"refresh()\" class=\"form-control-plaintext form-control-sm\" [(ngModel)]=\"d.name\">\n            </td>\n            <td>\n              <input type=\"text\" (change)=\"refresh()\" class=\"form-control-plaintext form-control-sm\" [(ngModel)]=\"d.value\">\n            </td>\n          </tr>\n          <tr>\n            <td colspan=\"2\">\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"addLine()\">\n                <i class=\"bi bi-plus-circle\"></i>\n                Nova linha\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n<!--    grafico -->\n    <div class=\"col-sm-6 half-square\">\n      <h2>Gráfico</h2>\n      <ngx-charts-pie-chart\n        [results]=\"dadosGrafico\"\n        [labels]=\"true\">\n      </ngx-charts-pie-chart>\n    </div>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    NgxChartsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}